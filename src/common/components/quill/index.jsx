import { IconButton } from '@mui/material';
import React from 'react';
import { Quill } from 'react-quill';
import { ReactComponent as ToggleMenu } from '../../../assets/icons/filled.svg';

// Custom svg icons for Quill toolbar
var icons = Quill.import('ui/icons');
icons['list']['ordered'] =
  '<svg width="14" height="10" viewBox="0 0 14 10" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0.666626 7.66666H1.99996V8H1.33329V8.66666H1.99996V9H0.666626V9.66666H2.66663V7H0.666626V7.66666ZM1.33329 2.99999H1.99996V0.333328H0.666626V0.999995H1.33329V2.99999ZM0.666626 4.33333H1.86663L0.666626 5.73333V6.33333H2.66663V5.66666H1.46663L2.66663 4.26666V3.66666H0.666626V4.33333ZM3.99996 0.999995V2.33333H13.3333V0.999995H3.99996ZM3.99996 9H13.3333V7.66666H3.99996V9ZM3.99996 5.66666H13.3333V4.33333H3.99996V5.66666Z" fill="#7E7E7E"/></svg>';
icons['bold'] =
  '<svg width="8" height="10" viewBox="0 0 8 10" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6.16668 4.86666C6.4931 4.66789 6.76857 4.39561 6.97113 4.07152C7.17368 3.74743 7.29772 3.38051 7.33335 2.99999C7.33953 2.65592 7.27787 2.31399 7.15188 1.99375C7.0259 1.67351 6.83806 1.38122 6.59909 1.13359C6.36012 0.885953 6.07471 0.687823 5.75916 0.550512C5.44361 0.413202 5.1041 0.339402 4.76002 0.333328H0.43335V9.66666H5.10002C5.42745 9.66318 5.75099 9.59523 6.05217 9.4667C6.35334 9.33817 6.62625 9.15157 6.8553 8.91757C7.08436 8.68356 7.26507 8.40672 7.38713 8.10287C7.50919 7.79902 7.5702 7.4741 7.56668 7.14666V7.06666C7.56691 6.60474 7.4353 6.15234 7.1873 5.76263C6.9393 5.37292 6.58523 5.06209 6.16668 4.86666ZM1.76668 1.66666H4.56668C4.8508 1.65787 5.1308 1.73618 5.36913 1.8911C5.60746 2.04601 5.79271 2.27011 5.90002 2.53333C6.0086 2.88519 5.97348 3.26572 5.80234 3.59176C5.6312 3.91781 5.33795 4.16285 4.98668 4.27333C4.85027 4.3133 4.70883 4.33351 4.56668 4.33333H1.76668V1.66666ZM4.83335 8.33333H1.76668V5.66666H4.83335C5.11746 5.65787 5.39747 5.73618 5.6358 5.8911C5.87413 6.04601 6.05937 6.27011 6.16668 6.53333C6.27526 6.88519 6.24015 7.26572 6.06901 7.59176C5.89786 7.91781 5.60462 8.16285 5.25335 8.27333C5.11694 8.3133 4.9755 8.33351 4.83335 8.33333Z" fill="#7E7E7E"/></svg>';
icons['italic'] =
  '<svg width="4" height="10" viewBox="0 0 4 10" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1.84002 2.99999H3.17335L1.70669 9.66666H0.373352L1.84002 2.99999ZM2.96002 0.333328C2.82816 0.333328 2.69927 0.372428 2.58964 0.445682C2.48001 0.518936 2.39456 0.623055 2.3441 0.744873C2.29364 0.86669 2.28044 1.00073 2.30616 1.13006C2.33189 1.25938 2.39538 1.37816 2.48861 1.4714C2.58185 1.56463 2.70064 1.62813 2.82996 1.65385C2.95928 1.67958 3.09332 1.66637 3.21514 1.61591C3.33696 1.56546 3.44108 1.48001 3.51433 1.37038C3.58759 1.26074 3.62668 1.13185 3.62668 0.999995C3.62668 0.823184 3.55645 0.653615 3.43142 0.528591C3.3064 0.403566 3.13683 0.333328 2.96002 0.333328Z" fill="#7E7E7E"/></svg>';
icons['underline'] =
  '<svg width="10" height="12" viewBox="0 0 10 12" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9.66665 10.3333V11.6667H0.333313V10.3333H9.66665ZM7.66665 5.81C7.64469 6.24998 7.51408 6.67768 7.28647 7.05487C7.05887 7.43205 6.74136 7.74697 6.36233 7.97149C5.98329 8.196 5.55454 8.32312 5.11439 8.34147C4.67423 8.35982 4.23639 8.26884 3.83998 8.07666C3.38307 7.87899 2.99558 7.54942 2.72716 7.13015C2.45873 6.71088 2.32159 6.22102 2.33331 5.72333V0.336662H0.99998V5.81C1.02253 6.4376 1.19255 7.05108 1.49626 7.60077C1.79997 8.15045 2.22884 8.62091 2.74816 8.97404C3.26748 9.32718 3.86265 9.55308 4.4855 9.63345C5.10834 9.71382 5.74136 9.6464 6.33331 9.43666C7.12072 9.17421 7.80388 8.66743 8.28347 7.99002C8.76305 7.3126 9.01406 6.49987 8.99998 5.67V0.336662H7.66665V5.81ZM7.66665 0.333328H8.99998H7.66665ZM2.33331 0.333328H0.99998H2.33331Z" fill="#7E7E7E"/></svg>';
icons['align'][''] =
  '<svg width="12" height="8" viewBox="0 0 12 8" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0 8H4V6.66667H0V8ZM0 3.33333V4.66667H8V3.33333H0ZM0 0V1.33333H12V0H0Z" fill="#7E7E7E"/></svg>';
icons['align']['center'] =
  '<svg width="12" height="8" viewBox="0 0 12 8" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4 8H8V6.66667H4V8ZM2 3.33333V4.66667H10V3.33333H2ZM0 0V1.33333H12V0H0Z" fill="#7E7E7E"/></svg>';
icons['image'] =
  '<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M7.33337 11.3333H4.66671C3.78265 11.3333 2.93481 10.9821 2.30968 10.357C1.68456 9.73191 1.33337 8.88406 1.33337 8C1.33337 7.11595 1.68456 6.2681 2.30968 5.64298C2.93481 5.01786 3.78265 4.66667 4.66671 4.66667H7.33337V6.00001H4.66671C4.13627 6.00001 3.62757 6.21072 3.25249 6.58579C2.87742 6.96086 2.66671 7.46957 2.66671 8C2.66671 8.53044 2.87742 9.03915 3.25249 9.41422C3.62757 9.78929 4.13627 10 4.66671 10H7.33337V11.3333ZM11.3334 4.66667H8.66671V6.00001H11.3334C11.8638 6.00001 12.3725 6.21072 12.7476 6.58579C13.1227 6.96086 13.3334 7.46957 13.3334 8C13.3334 8.53044 13.1227 9.03915 12.7476 9.41422C12.3725 9.78929 11.8638 10 11.3334 10H8.66671V11.3333H11.3334C12.2174 11.3333 13.0653 10.9821 13.6904 10.357C14.3155 9.73191 14.6667 8.88406 14.6667 8C14.6667 7.11595 14.3155 6.2681 13.6904 5.64298C13.0653 5.01786 12.2174 4.66667 11.3334 4.66667ZM10.6667 7.33334H5.33337V8.66667H10.6667V7.33334Z" fill="#7E7E7E"/></svg>';

icons['color'] =
  '<svg width="15" height="15" viewBox="0 0 12 10"> <path  d="M7.03385 9.98678H8.36719L5.03385 0.653442H3.70052L0.367188 9.98678H1.70052L2.63385 7.32011H6.03385L7.03385 9.98678ZM3.10052 5.98678L4.36719 2.52011L5.63385 5.98678H3.10052ZM11.6339 8.98678C11.6339 9.18456 11.5752 9.3779 11.4653 9.54235C11.3554 9.70679 11.1993 9.83497 11.0165 9.91066C10.8338 9.98634 10.6327 10.0061 10.4388 9.96756C10.2448 9.92898 10.0666 9.83373 9.92675 9.69388C9.78689 9.55403 9.69165 9.37585 9.65307 9.18187C9.61448 8.98788 9.63429 8.78682 9.70997 8.60409C9.78566 8.42137 9.91383 8.26519 10.0783 8.15531C10.2427 8.04543 10.4361 7.98678 10.6339 7.98678C10.8991 7.98678 11.1534 8.09213 11.341 8.27967C11.5285 8.46721 11.6339 8.72156 11.6339 8.98678ZM11.6339 6.32011C11.6339 6.51789 11.5752 6.71123 11.4653 6.87568C11.3554 7.04013 11.1993 7.1683 11.0165 7.24399C10.8338 7.31968 10.6327 7.33948 10.4388 7.30089C10.2448 7.26231 10.0666 7.16707 9.92675 7.02722C9.78689 6.88736 9.69165 6.70918 9.65307 6.5152C9.61448 6.32122 9.63429 6.12015 9.70997 5.93743C9.78566 5.7547 9.91383 5.59852 10.0783 5.48864C10.2427 5.37876 10.4361 5.32011 10.6339 5.32011C10.8991 5.32011 11.1534 5.42547 11.341 5.613C11.5285 5.80054 11.6339 6.05489 11.6339 6.32011ZM11.6339 3.65344C11.6339 3.85122 11.5752 4.04456 11.4653 4.20901C11.3554 4.37346 11.1993 4.50163 11.0165 4.57732C10.8338 4.65301 10.6327 4.67281 10.4388 4.63423C10.2448 4.59564 10.0666 4.5004 9.92675 4.36055C9.78689 4.2207 9.69165 4.04251 9.65307 3.84853C9.61448 3.65455 9.63429 3.45349 9.70997 3.27076C9.78566 3.08803 9.91383 2.93185 10.0783 2.82197C10.2427 2.71209 10.4361 2.65344 10.6339 2.65344C10.8991 2.65344 11.1534 2.7588 11.341 2.94634C11.5285 3.13387 11.6339 3.38823 11.6339 3.65344Z" fill="#7E7E7E"/></svg>';

/**
 * Custom list handler
 */
export function listOrdered() {
  var range = this.quill.getSelection();
  var formats = this.quill.getFormat(range);
  if (formats['list'] === 'ordered') {
    this.quill.format('list', false);
  } else {
    this.quill.format('list', 'ordered');
  }
}

// <span className='ql-formats'>
//   <select className='ql-background' />
// </span>

export const QuillToolbar = () => (
  <div id='toolbar'>
    <span className='ql-formats'>
      <button className='ql-bold' />
      <button className='ql-italic' />
      <button className='ql-underline' />
      {/* <button className='ql-strike' /> */}
    </span>
    <span className='ql-formats'>
      <select className='ql-color' />
    </span>

    <span className='ql-formats'>
      <button className='ql-list' value='ordered' />
      {/* <button className="ql-list" value="bullet" /> */}
    </span>
    <span className='ql-formats'>
      <select className='ql-align' />
    </span>
    <span className='ql-formats'>
      {/* <button className='ql-link' /> */}
      <button className='ql-image' />
    </span>
  </div>
);

// eslint-disable-next-line react/prop-types
export const QuillToolbarWithoutHeader = ({ open, handlerClose, handleClick }) => (
  <div onMouseLeave={handlerClose} id='toolbar'>
    <IconButton style={{ position: 'relative' }} onClick={handleClick}>
      <ToggleMenu />
    </IconButton>
    <div id='icon-toolbar' className={open === true ? 'showToolbar' : 'hideToolbar'}>
      <span className='ql-formats'>
        <button className='ql-bold' />
        <button className='ql-italic' />
        <button className='ql-underline' />
      </span>
      <span className='ql-formats'>
        <select className='ql-color' />
      </span>
      <span className='ql-formats'>
        <button className='ql-list' value='ordered' />
        {/* <button className="ql-list" value="bullet" /> */}
      </span>
      <span className='ql-formats'>
        <select className='ql-align' />
      </span>
      <span className='ql-formats'>
        {/* <button className='ql-link' /> */}
        <button className='ql-image' />
      </span>
    </div>
  </div>
);
